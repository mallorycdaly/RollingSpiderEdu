% Autogenerated file: Mon Mar  6 10:27:42 2017
function writeCodeInfoFcn


% Load a ComponentInterface object from IR
codeIRInfoStruct = load('/home/student/RollingSpiderEdu/MIT_MatlabToolbox/trunk/matlab/Simulation/Drone_Compensator_ert_shrlib_rtw/tlc/codeIRInfo.mat');
codeInfo = codeIRInfoStruct.codeInfo;




skippedParameters = [];
                  
% Structure Elements
Type_23_R0_V0_EL = [];
          
% Built-In Type: 0
Type_0_R0_V0 = numerictype('double');
  Type_0_R0_V0.Name = 'double';
  Type_0_R0_V0.Identifier = 'real_T';
  Type_0_R0_V0.ReadOnly   = 0;
  Type_0_R0_V0.Volatile   = 0;
        
  % Element # 1
  Type_23_R0_V0_M0 = embedded.structelement;
    Type_23_R0_V0_M0.Identifier = 'w2ToThrust_gain';
    Type_23_R0_V0_M0.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M0];
    
  % Element # 2
  Type_23_R0_V0_M1 = embedded.structelement;
    Type_23_R0_V0_M1.Identifier = 'motors_max';
    Type_23_R0_V0_M1.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M1];
    
  % Element # 3
  Type_23_R0_V0_M2 = embedded.structelement;
    Type_23_R0_V0_M2.Identifier = 'motorcommandToW2_gain';
    Type_23_R0_V0_M2.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M2];
    
  % Element # 4
  Type_23_R0_V0_M3 = embedded.structelement;
    Type_23_R0_V0_M3.Identifier = 'thrustToMotorcommand';
    Type_23_R0_V0_M3.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M3];
      
  % Matrix Type
  Type_19_R0_V0 = embedded.matrixtype;
  Type_19_R0_V0.BaseType   = Type_0_R0_V0;
    Type_19_R0_V0.Dimensions = [8, 8];
        
  % Element # 5
  Type_23_R0_V0_M4 = embedded.structelement;
    Type_23_R0_V0_M4.Identifier = 'noiseSensed_var';
    Type_23_R0_V0_M4.Type = Type_19_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M4];
    
  % Element # 6
  Type_23_R0_V0_M5 = embedded.structelement;
    Type_23_R0_V0_M5.Identifier = 'sensordelay';
    Type_23_R0_V0_M5.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M5];
      
  % Matrix Type
  Type_20_R0_V0 = embedded.matrixtype;
  Type_20_R0_V0.BaseType   = Type_0_R0_V0;
    Type_20_R0_V0.Dimensions = [1, 7];
        
  % Element # 7
  Type_23_R0_V0_M6 = embedded.structelement;
    Type_23_R0_V0_M6.Identifier = 'sensordataCalib';
    Type_23_R0_V0_M6.Type = Type_20_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M6];
      
  % Matrix Type
  Type_21_R0_V0 = embedded.matrixtype;
  Type_21_R0_V0.BaseType   = Type_0_R0_V0;
    Type_21_R0_V0.Dimensions = [1, 3];
        
  % Element # 8
  Type_23_R0_V0_M7 = embedded.structelement;
    Type_23_R0_V0_M7.Identifier = 'IMUaccel_gain';
    Type_23_R0_V0_M7.Type = Type_21_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M7];
    
  % Element # 9
  Type_23_R0_V0_M8 = embedded.structelement;
    Type_23_R0_V0_M8.Identifier = 'IMUgyro_gain';
    Type_23_R0_V0_M8.Type = Type_21_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M8];
    
  % Element # 10
  Type_23_R0_V0_M9 = embedded.structelement;
    Type_23_R0_V0_M9.Identifier = 'airDensity';
    Type_23_R0_V0_M9.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M9];
    
  % Element # 11
  Type_23_R0_V0_M10 = embedded.structelement;
    Type_23_R0_V0_M10.Identifier = 'altToPrs_gain';
    Type_23_R0_V0_M10.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M10];
      
  % Matrix Type
  Type_22_R0_V0 = embedded.matrixtype;
  Type_22_R0_V0.BaseType   = Type_0_R0_V0;
    Type_22_R0_V0.Dimensions = [1, 6];
        
  % Element # 12
  Type_23_R0_V0_M11 = embedded.structelement;
    Type_23_R0_V0_M11.Identifier = 'inverseIMU_gain';
    Type_23_R0_V0_M11.Type = Type_22_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M11];
    
  % Element # 13
  Type_23_R0_V0_M12 = embedded.structelement;
    Type_23_R0_V0_M12.Identifier = 'altSenor_min';
    Type_23_R0_V0_M12.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M12];
            
% Structure Elements
Type_18_R0_V0_EL = [];
      
  % Matrix Type
  Type_16_R0_V0 = embedded.matrixtype;
  Type_16_R0_V0.BaseType   = Type_0_R0_V0;
    Type_16_R0_V0.Dimensions = [1, 2];
        
  % Element # 1
  Type_18_R0_V0_M0 = embedded.structelement;
    Type_18_R0_V0_M0.Identifier = 'batteryStatus';
    Type_18_R0_V0_M0.Type = Type_16_R0_V0;
  Type_18_R0_V0_EL = [Type_18_R0_V0_EL, Type_18_R0_V0_M0];
      
  % Matrix Type
  Type_17_R0_V0 = embedded.matrixtype;
  Type_17_R0_V0.BaseType   = Type_0_R0_V0;
    Type_17_R0_V0.Dimensions = [4, 1];
        
  % Element # 2
  Type_18_R0_V0_M1 = embedded.structelement;
    Type_18_R0_V0_M1.Identifier = 'posVIS_novisionavail';
    Type_18_R0_V0_M1.Type = Type_17_R0_V0;
  Type_18_R0_V0_EL = [Type_18_R0_V0_EL, Type_18_R0_V0_M1];
    
  % Element # 3
  Type_18_R0_V0_M2 = embedded.structelement;
    Type_18_R0_V0_M2.Identifier = 'usePosVIS_flag';
    Type_18_R0_V0_M2.Type = Type_0_R0_V0;
  Type_18_R0_V0_EL = [Type_18_R0_V0_EL, Type_18_R0_V0_M2];
    
% Structure Type
Type_18_R0_V0 = embedded.structtype;
  Type_18_R0_V0.Identifier = 'struct_27dTQuiR3L9WSuFjHuj2tB';
  Type_18_R0_V0.Name       = 'struct_27dTQuiR3L9WSuFjHuj2tB';
  Type_18_R0_V0.Elements   = Type_18_R0_V0_EL;
  Type_18_R0_V0.ReadOnly   = 0;
  Type_18_R0_V0.Volatile   = 0;
  Type_18_R0_V0.Checksum   = uint32([8.40914942E+8; 6.97794146E+8; 2.961169099E+9; 2.612513372E+9]);
        
  % Element # 14
  Type_23_R0_V0_M13 = embedded.structelement;
    Type_23_R0_V0_M13.Identifier = 'dummy';
    Type_23_R0_V0_M13.Type = Type_18_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M13];
    
  % Element # 15
  Type_23_R0_V0_M14 = embedded.structelement;
    Type_23_R0_V0_M14.Identifier = 'velocityToOpticalFlow_gain';
    Type_23_R0_V0_M14.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M14];
    
  % Element # 16
  Type_23_R0_V0_M15 = embedded.structelement;
    Type_23_R0_V0_M15.Identifier = 'sampletime';
    Type_23_R0_V0_M15.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M15];
    
  % Element # 17
  Type_23_R0_V0_M16 = embedded.structelement;
    Type_23_R0_V0_M16.Identifier = 'yawStep_amplitude';
    Type_23_R0_V0_M16.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M16];
    
  % Element # 18
  Type_23_R0_V0_M17 = embedded.structelement;
    Type_23_R0_V0_M17.Identifier = 'yawStep_time';
    Type_23_R0_V0_M17.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M17];
    
  % Element # 19
  Type_23_R0_V0_M18 = embedded.structelement;
    Type_23_R0_V0_M18.Identifier = 'yawStep_duration';
    Type_23_R0_V0_M18.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M18];
    
  % Element # 20
  Type_23_R0_V0_M19 = embedded.structelement;
    Type_23_R0_V0_M19.Identifier = 'pitchStep_amplitude';
    Type_23_R0_V0_M19.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M19];
    
  % Element # 21
  Type_23_R0_V0_M20 = embedded.structelement;
    Type_23_R0_V0_M20.Identifier = 'pitchStep_time';
    Type_23_R0_V0_M20.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M20];
    
  % Element # 22
  Type_23_R0_V0_M21 = embedded.structelement;
    Type_23_R0_V0_M21.Identifier = 'pitchStep_duration';
    Type_23_R0_V0_M21.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M21];
    
  % Element # 23
  Type_23_R0_V0_M22 = embedded.structelement;
    Type_23_R0_V0_M22.Identifier = 'rollStep_amplitude';
    Type_23_R0_V0_M22.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M22];
    
  % Element # 24
  Type_23_R0_V0_M23 = embedded.structelement;
    Type_23_R0_V0_M23.Identifier = 'rollStep_time';
    Type_23_R0_V0_M23.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M23];
    
  % Element # 25
  Type_23_R0_V0_M24 = embedded.structelement;
    Type_23_R0_V0_M24.Identifier = 'rollStep_duration';
    Type_23_R0_V0_M24.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M24];
    
  % Element # 26
  Type_23_R0_V0_M25 = embedded.structelement;
    Type_23_R0_V0_M25.Identifier = 'takeoff_duration';
    Type_23_R0_V0_M25.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M25];
    
  % Element # 27
  Type_23_R0_V0_M26 = embedded.structelement;
    Type_23_R0_V0_M26.Identifier = 'altitude';
    Type_23_R0_V0_M26.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M26];
    
  % Element # 28
  Type_23_R0_V0_M27 = embedded.structelement;
    Type_23_R0_V0_M27.Identifier = 'NO_VIS_X';
    Type_23_R0_V0_M27.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M27];
    
  % Element # 29
  Type_23_R0_V0_M28 = embedded.structelement;
    Type_23_R0_V0_M28.Identifier = 'NO_VIS_YAW';
    Type_23_R0_V0_M28.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M28];
    
  % Element # 30
  Type_23_R0_V0_M29 = embedded.structelement;
    Type_23_R0_V0_M29.Identifier = 'motorFailure_time';
    Type_23_R0_V0_M29.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M29];
    
  % Element # 31
  Type_23_R0_V0_M30 = embedded.structelement;
    Type_23_R0_V0_M30.Identifier = 'motorFailure_duration';
    Type_23_R0_V0_M30.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M30];
    
  % Element # 32
  Type_23_R0_V0_M31 = embedded.structelement;
    Type_23_R0_V0_M31.Identifier = 'motorFailure_m1';
    Type_23_R0_V0_M31.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M31];
    
  % Element # 33
  Type_23_R0_V0_M32 = embedded.structelement;
    Type_23_R0_V0_M32.Identifier = 'motorFailure_m2';
    Type_23_R0_V0_M32.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M32];
    
  % Element # 34
  Type_23_R0_V0_M33 = embedded.structelement;
    Type_23_R0_V0_M33.Identifier = 'motorFailure_m3';
    Type_23_R0_V0_M33.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M33];
    
  % Element # 35
  Type_23_R0_V0_M34 = embedded.structelement;
    Type_23_R0_V0_M34.Identifier = 'motorFailure_m4';
    Type_23_R0_V0_M34.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M34];
    
  % Element # 36
  Type_23_R0_V0_M35 = embedded.structelement;
    Type_23_R0_V0_M35.Identifier = 'motorUnknownGain_gain';
    Type_23_R0_V0_M35.Type = Type_0_R0_V0;
  Type_23_R0_V0_EL = [Type_23_R0_V0_EL, Type_23_R0_V0_M35];
    
% Structure Type
Type_23_R0_V0 = embedded.structtype;
  Type_23_R0_V0.Identifier = 'struct_EZUgtT0cfPVE3idPcjC7m';
  Type_23_R0_V0.Name       = 'struct_EZUgtT0cfPVE3idPcjC7m';
  Type_23_R0_V0.Elements   = Type_23_R0_V0_EL;
  Type_23_R0_V0.ReadOnly   = 0;
  Type_23_R0_V0.Volatile   = 0;
  Type_23_R0_V0.Checksum   = uint32([1.542467863E+9; 5.8705364E+8; 2.747888792E+9; 2.361991344E+9]);
    
  % Matrix Type
  Type_68_R0_V0 = embedded.matrixtype;
  Type_68_R0_V0.BaseType   = Type_23_R0_V0;
    Type_68_R0_V0.Dimensions = [1, 1];
                      
% Structure Elements
Type_25_R0_V0_EL = [];
    
  % Element # 1
  Type_25_R0_V0_M0 = embedded.structelement;
    Type_25_R0_V0_M0.Identifier = 'nrotors';
    Type_25_R0_V0_M0.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M0];
    
  % Element # 2
  Type_25_R0_V0_M1 = embedded.structelement;
    Type_25_R0_V0_M1.Identifier = 'g';
    Type_25_R0_V0_M1.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M1];
    
  % Element # 3
  Type_25_R0_V0_M2 = embedded.structelement;
    Type_25_R0_V0_M2.Identifier = 'rho';
    Type_25_R0_V0_M2.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M2];
    
  % Element # 4
  Type_25_R0_V0_M3 = embedded.structelement;
    Type_25_R0_V0_M3.Identifier = 'muv';
    Type_25_R0_V0_M3.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M3];
    
  % Element # 5
  Type_25_R0_V0_M4 = embedded.structelement;
    Type_25_R0_V0_M4.Identifier = 'M';
    Type_25_R0_V0_M4.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M4];
      
  % Matrix Type
  Type_24_R0_V0 = embedded.matrixtype;
  Type_24_R0_V0.BaseType   = Type_0_R0_V0;
    Type_24_R0_V0.Dimensions = [3, 3];
        
  % Element # 6
  Type_25_R0_V0_M5 = embedded.structelement;
    Type_25_R0_V0_M5.Identifier = 'J';
    Type_25_R0_V0_M5.Type = Type_24_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M5];
    
  % Element # 7
  Type_25_R0_V0_M6 = embedded.structelement;
    Type_25_R0_V0_M6.Identifier = 'h';
    Type_25_R0_V0_M6.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M6];
    
  % Element # 8
  Type_25_R0_V0_M7 = embedded.structelement;
    Type_25_R0_V0_M7.Identifier = 'd';
    Type_25_R0_V0_M7.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M7];
    
  % Element # 9
  Type_25_R0_V0_M8 = embedded.structelement;
    Type_25_R0_V0_M8.Identifier = 'nb';
    Type_25_R0_V0_M8.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M8];
    
  % Element # 10
  Type_25_R0_V0_M9 = embedded.structelement;
    Type_25_R0_V0_M9.Identifier = 'r';
    Type_25_R0_V0_M9.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M9];
    
  % Element # 11
  Type_25_R0_V0_M10 = embedded.structelement;
    Type_25_R0_V0_M10.Identifier = 'c';
    Type_25_R0_V0_M10.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M10];
    
  % Element # 12
  Type_25_R0_V0_M11 = embedded.structelement;
    Type_25_R0_V0_M11.Identifier = 'e';
    Type_25_R0_V0_M11.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M11];
    
  % Element # 13
  Type_25_R0_V0_M12 = embedded.structelement;
    Type_25_R0_V0_M12.Identifier = 'Mb';
    Type_25_R0_V0_M12.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M12];
    
  % Element # 14
  Type_25_R0_V0_M13 = embedded.structelement;
    Type_25_R0_V0_M13.Identifier = 'Mc';
    Type_25_R0_V0_M13.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M13];
    
  % Element # 15
  Type_25_R0_V0_M14 = embedded.structelement;
    Type_25_R0_V0_M14.Identifier = 'ec';
    Type_25_R0_V0_M14.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M14];
    
  % Element # 16
  Type_25_R0_V0_M15 = embedded.structelement;
    Type_25_R0_V0_M15.Identifier = 'Ib';
    Type_25_R0_V0_M15.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M15];
    
  % Element # 17
  Type_25_R0_V0_M16 = embedded.structelement;
    Type_25_R0_V0_M16.Identifier = 'Ic';
    Type_25_R0_V0_M16.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M16];
    
  % Element # 18
  Type_25_R0_V0_M17 = embedded.structelement;
    Type_25_R0_V0_M17.Identifier = 'mb';
    Type_25_R0_V0_M17.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M17];
    
  % Element # 19
  Type_25_R0_V0_M18 = embedded.structelement;
    Type_25_R0_V0_M18.Identifier = 'Ir';
    Type_25_R0_V0_M18.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M18];
    
  % Element # 20
  Type_25_R0_V0_M19 = embedded.structelement;
    Type_25_R0_V0_M19.Identifier = 'Ct';
    Type_25_R0_V0_M19.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M19];
    
  % Element # 21
  Type_25_R0_V0_M20 = embedded.structelement;
    Type_25_R0_V0_M20.Identifier = 'Cq';
    Type_25_R0_V0_M20.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M20];
    
  % Element # 22
  Type_25_R0_V0_M21 = embedded.structelement;
    Type_25_R0_V0_M21.Identifier = 'sigma';
    Type_25_R0_V0_M21.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M21];
    
  % Element # 23
  Type_25_R0_V0_M22 = embedded.structelement;
    Type_25_R0_V0_M22.Identifier = 'thetat';
    Type_25_R0_V0_M22.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M22];
    
  % Element # 24
  Type_25_R0_V0_M23 = embedded.structelement;
    Type_25_R0_V0_M23.Identifier = 'theta0';
    Type_25_R0_V0_M23.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M23];
    
  % Element # 25
  Type_25_R0_V0_M24 = embedded.structelement;
    Type_25_R0_V0_M24.Identifier = 'theta1';
    Type_25_R0_V0_M24.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M24];
    
  % Element # 26
  Type_25_R0_V0_M25 = embedded.structelement;
    Type_25_R0_V0_M25.Identifier = 'theta75';
    Type_25_R0_V0_M25.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M25];
    
  % Element # 27
  Type_25_R0_V0_M26 = embedded.structelement;
    Type_25_R0_V0_M26.Identifier = 'thetai';
    Type_25_R0_V0_M26.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M26];
    
  % Element # 28
  Type_25_R0_V0_M27 = embedded.structelement;
    Type_25_R0_V0_M27.Identifier = 'a';
    Type_25_R0_V0_M27.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M27];
    
  % Element # 29
  Type_25_R0_V0_M28 = embedded.structelement;
    Type_25_R0_V0_M28.Identifier = 'A';
    Type_25_R0_V0_M28.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M28];
    
  % Element # 30
  Type_25_R0_V0_M29 = embedded.structelement;
    Type_25_R0_V0_M29.Identifier = 'gamma';
    Type_25_R0_V0_M29.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M29];
    
  % Element # 31
  Type_25_R0_V0_M30 = embedded.structelement;
    Type_25_R0_V0_M30.Identifier = 'b';
    Type_25_R0_V0_M30.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M30];
    
  % Element # 32
  Type_25_R0_V0_M31 = embedded.structelement;
    Type_25_R0_V0_M31.Identifier = 'k';
    Type_25_R0_V0_M31.Type = Type_0_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M31];
          
% Built-In Type: 8
 Type_8_R0_V0 = numerictype('boolean');
  Type_8_R0_V0.Name = 'boolean';
  Type_8_R0_V0.Identifier = 'boolean_T';
  Type_8_R0_V0.ReadOnly   = 0;
  Type_8_R0_V0.Volatile   = 0;
        
  % Element # 33
  Type_25_R0_V0_M32 = embedded.structelement;
    Type_25_R0_V0_M32.Identifier = 'verbose';
    Type_25_R0_V0_M32.Type = Type_8_R0_V0;
  Type_25_R0_V0_EL = [Type_25_R0_V0_EL, Type_25_R0_V0_M32];
    
% Structure Type
Type_25_R0_V0 = embedded.structtype;
  Type_25_R0_V0.Identifier = 'struct_pP0yJPvqYhejK9gHgcbWI';
  Type_25_R0_V0.Name       = 'struct_pP0yJPvqYhejK9gHgcbWI';
  Type_25_R0_V0.Elements   = Type_25_R0_V0_EL;
  Type_25_R0_V0.ReadOnly   = 0;
  Type_25_R0_V0.Volatile   = 0;
  Type_25_R0_V0.Checksum   = uint32([3.943961526E+9; 2.093220072E+9; 8.50888016E+8; 1.170968785E+9]);
    
  % Matrix Type
  Type_69_R0_V0 = embedded.matrixtype;
  Type_69_R0_V0.BaseType   = Type_25_R0_V0;
    Type_69_R0_V0.Dimensions = [1, 1];
                      
% Structure Elements
Type_15_R0_V0_EL = [];
      
  % Matrix Type
  Type_14_R0_V0 = embedded.matrixtype;
  Type_14_R0_V0.BaseType   = Type_0_R0_V0;
    Type_14_R0_V0.Dimensions = [4, 4];
        
  % Element # 1
  Type_15_R0_V0_M0 = embedded.structelement;
    Type_15_R0_V0_M0.Identifier = 'Ts2Q';
    Type_15_R0_V0_M0.Type = Type_14_R0_V0;
  Type_15_R0_V0_EL = [Type_15_R0_V0_EL, Type_15_R0_V0_M0];
    
  % Element # 2
  Type_15_R0_V0_M1 = embedded.structelement;
    Type_15_R0_V0_M1.Identifier = 'Q2Ts';
    Type_15_R0_V0_M1.Type = Type_14_R0_V0;
  Type_15_R0_V0_EL = [Type_15_R0_V0_EL, Type_15_R0_V0_M1];
    
  % Element # 3
  Type_15_R0_V0_M2 = embedded.structelement;
    Type_15_R0_V0_M2.Identifier = 'takeoff_gain';
    Type_15_R0_V0_M2.Type = Type_0_R0_V0;
  Type_15_R0_V0_EL = [Type_15_R0_V0_EL, Type_15_R0_V0_M2];
    
  % Element # 4
  Type_15_R0_V0_M3 = embedded.structelement;
    Type_15_R0_V0_M3.Identifier = 'totalThrust_maxRelative';
    Type_15_R0_V0_M3.Type = Type_0_R0_V0;
  Type_15_R0_V0_EL = [Type_15_R0_V0_EL, Type_15_R0_V0_M3];
    
  % Element # 5
  Type_15_R0_V0_M4 = embedded.structelement;
    Type_15_R0_V0_M4.Identifier = 'motorsThrustperMotor_max';
    Type_15_R0_V0_M4.Type = Type_0_R0_V0;
  Type_15_R0_V0_EL = [Type_15_R0_V0_EL, Type_15_R0_V0_M4];
    
% Structure Type
Type_15_R0_V0 = embedded.structtype;
  Type_15_R0_V0.Identifier = 'struct_SNZkZ6rc9vhdEg27lKQdHF';
  Type_15_R0_V0.Name       = 'struct_SNZkZ6rc9vhdEg27lKQdHF';
  Type_15_R0_V0.Elements   = Type_15_R0_V0_EL;
  Type_15_R0_V0.ReadOnly   = 0;
  Type_15_R0_V0.Volatile   = 0;
  Type_15_R0_V0.Checksum   = uint32([1.070464397E+9; 2.26876024E+9; 3.059066883E+9; 3.489821414E+9]);
    
  % Matrix Type
  Type_70_R0_V0 = embedded.matrixtype;
  Type_70_R0_V0.BaseType   = Type_15_R0_V0;
    Type_70_R0_V0.Dimensions = [1, 1];
          
  % Matrix Type
  Type_43_R0_V0 = embedded.matrixtype;
  Type_43_R0_V0.BaseType   = Type_0_R0_V0;
    Type_43_R0_V0.Dimensions = [4, 12];
          
  % Matrix Type
  Type_71_R0_V0 = embedded.matrixtype;
  Type_71_R0_V0.BaseType   = Type_0_R0_V0;
    Type_71_R0_V0.Dimensions = [1, 1];
    
  tmpParams = [];
if ~isempty(tmpParams)
codeInfo.Parameters = [codeInfo.Parameters; tmpParams];
end

    tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = [];
tmpActualReturn = [];
  
        
      
% Opaque Data Type
type_RTModel  = embedded.opaquetype('RT_MODEL_Drone_Compensator_T');
      

% Pointer Type: Pointer to type_RTModel    
Ptrtype_RTModel_1_0 = embedded.pointertype;
   Ptrtype_RTModel_1_0.BaseType = type_RTModel;
    Ptrtype_RTModel_1_0.ReadOnly = 1;
    Ptrtype_RTModel_1_0.Volatile = 0;
    
      Ptrtype_RTModel_1_0.ReadOnly = 1;
    
% Variable: Var_RTModel
Var_RTModel = RTW.Variable(type_RTModel, 'Drone_Compensator_M_');
    Var_RTModel.Owner           = '';
    Var_RTModel.DeclarationFile = '';
    
    
% Pointer Variable: PtrVar_RTModel
PtrVar_RTModel = RTW.PointerVariable(Ptrtype_RTModel_1_0, 'Drone_Compensator_M', Var_RTModel);
    
    
% Data Interface: idata_RTModel
idata_RTModel = RTW.DataInterface('', 'Real-time model', PtrVar_RTModel, []);
    
    
        Initialize_RTArg = RTW.Argument;
        Initialize_RTArg.Type   = Ptrtype_RTModel_1_0;
        Initialize_RTArg.Name   = 'Drone_Compensator_M';
        Initialize_RTArg.IOType = 'RTW_IO_INPUT_OUTPUT';    
        
        tmpArgs    = [tmpArgs; Initialize_RTArg];
        tmpActualArgs = [tmpActualArgs; idata_RTModel];

  
  % Data Interface: Parameter
  idata_Parameter = getInternalDataByName(codeInfo.InternalData, 'Parameter');
    if ~isa(idata_Parameter.Implementation,'RTW.PointerExpression') 
        idata_Parameter.Implementation.Identifier = 'Drone_Compensator_P';
    end
  
  % Type of : idata_Parameter
  if isa(idata_Parameter.Implementation,'RTW.PointerExpression')
  type_idata_Parameter = idata_Parameter.Implementation.TargetRegion.Type;
  else
  type_idata_Parameter = idata_Parameter.Implementation.Type;
  end

% Pointer Type: Pointer to type_idata_Parameter    
Ptrtype_idata_Parameter_0_0 = embedded.pointertype;
   Ptrtype_idata_Parameter_0_0.BaseType = type_idata_Parameter;
    Ptrtype_idata_Parameter_0_0.ReadOnly = 0;
    Ptrtype_idata_Parameter_0_0.Volatile = 0;
    
      
      if ~isa(idata_Parameter.Implementation,'RTW.PointerExpression') 
                 
  
    % Structure Element: StructElem_PointerExpr_rt_Parameter
    StructElem_PointerExpr_rt_Parameter = embedded.structelement;
    StructElem_PointerExpr_rt_Parameter.Identifier = 'ModelData.defaultParam';
    StructElem_PointerExpr_rt_Parameter.Type = Ptrtype_idata_Parameter_0_0;
    
    
    % Pointer Expression: PointerExpr_rt_Parameter
    PointerExpr_rt_Parameter = RTW.PointerExpression(StructElem_PointerExpr_rt_Parameter, PtrVar_RTModel, idata_Parameter.Implementation);
    
    
          
         idata_Parameter.Implementation = PointerExpr_rt_Parameter;      
      end
     
      
% Opaque Data Type
type_BlockIO  = embedded.opaquetype('B_Drone_Compensator_T');
      

% Pointer Type: Pointer to type_BlockIO    
Ptrtype_BlockIO_0_0 = embedded.pointertype;
   Ptrtype_BlockIO_0_0.BaseType = type_BlockIO;
    Ptrtype_BlockIO_0_0.ReadOnly = 0;
    Ptrtype_BlockIO_0_0.Volatile = 0;
    
    
% Variable: Var_rt_BlockIO
Var_rt_BlockIO = RTW.Variable(type_BlockIO, 'Drone_Compensator_B');
    Var_rt_BlockIO.Owner           = '';
    Var_rt_BlockIO.DeclarationFile = '';
    
    
  
    % Structure Element: StructElem_PointerExpr_rt_BlockIO
    StructElem_PointerExpr_rt_BlockIO = embedded.structelement;
    StructElem_PointerExpr_rt_BlockIO.Identifier = 'ModelData.blockIO';
    StructElem_PointerExpr_rt_BlockIO.Type = Ptrtype_BlockIO_0_0;
    
    
    % Pointer Expression: PointerExpr_rt_BlockIO
    PointerExpr_rt_BlockIO = RTW.PointerExpression(StructElem_PointerExpr_rt_BlockIO, PtrVar_RTModel, Var_rt_BlockIO);
    
    
        
    
% Data Interface: idata_rt_BlockIO
idata_rt_BlockIO = RTW.DataInterface('', 'Block signals', PointerExpr_rt_BlockIO, []);
    
      
% Opaque Data Type
type_DWork  = embedded.opaquetype('DW_Drone_Compensator_T');
      

% Pointer Type: Pointer to type_DWork    
Ptrtype_DWork_0_0 = embedded.pointertype;
   Ptrtype_DWork_0_0.BaseType = type_DWork;
    Ptrtype_DWork_0_0.ReadOnly = 0;
    Ptrtype_DWork_0_0.Volatile = 0;
    
    
% Variable: Var_rt_DWork
Var_rt_DWork = RTW.Variable(type_DWork, 'Drone_Compensator_DW');
    Var_rt_DWork.Owner           = '';
    Var_rt_DWork.DeclarationFile = '';
    
   
  
    % Structure Element: StructElem_PointerExpr_rt_DWork
    StructElem_PointerExpr_rt_DWork = embedded.structelement;
    StructElem_PointerExpr_rt_DWork.Identifier = 'ModelData.dwork';
    StructElem_PointerExpr_rt_DWork.Type = Ptrtype_DWork_0_0;
    
    
    % Pointer Expression: PointerExpr_rt_DWork
    PointerExpr_rt_DWork = RTW.PointerExpression(StructElem_PointerExpr_rt_DWork, PtrVar_RTModel, Var_rt_DWork);
    
    
       
    
% Data Interface: idata_rt_DWork
idata_rt_DWork = RTW.DataInterface('', 'Block states', PointerExpr_rt_DWork, []);
    

% Pointer Type: Pointer to Type_8_R0_V0    
PtrType_8_R0_V0_0_0 = embedded.pointertype;
   PtrType_8_R0_V0_0_0.BaseType = Type_8_R0_V0;
    PtrType_8_R0_V0_0_0.ReadOnly = 0;
    PtrType_8_R0_V0_0_0.Volatile = 0;
    
        Initialize_EI0Arg = RTW.Argument;
        Initialize_EI0Arg.Type = PtrType_8_R0_V0_0_0;
        Initialize_EI0Arg.Name = 'Drone_Compensator_U_controlModePosVSOrient_flagin';
        codeInfo.Inports(0+1).Implementation.Identifier = 'Drone_Compensator_U_controlModePosVSOrient_flagin';
      
tmpArgs    = [tmpArgs; Initialize_EI0Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(0+1)];
      
  % Matrix Type
  Type_34_R0_V0 = embedded.matrixtype;
  Type_34_R0_V0.BaseType   = Type_0_R0_V0;
    Type_34_R0_V0.Dimensions = [3];
            Initialize_EI1Arg = RTW.Argument;
        Initialize_EI1Arg.Type = Type_34_R0_V0;
        Initialize_EI1Arg.Name = 'Drone_Compensator_U_pos_refin';
        codeInfo.Inports(1+1).Implementation.Identifier = 'Drone_Compensator_U_pos_refin';
      
tmpArgs    = [tmpArgs; Initialize_EI1Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(1+1)];
        Initialize_EI2Arg = RTW.Argument;
        Initialize_EI2Arg.Type = PtrType_8_R0_V0_0_0;
        Initialize_EI2Arg.Name = 'Drone_Compensator_U_takeoff_flag';
        codeInfo.Inports(2+1).Implementation.Identifier = 'Drone_Compensator_U_takeoff_flag';
      
tmpArgs    = [tmpArgs; Initialize_EI2Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(2+1)];
        Initialize_EI3Arg = RTW.Argument;
        Initialize_EI3Arg.Type = Type_34_R0_V0;
        Initialize_EI3Arg.Name = 'Drone_Compensator_U_orient_refin';
        codeInfo.Inports(3+1).Implementation.Identifier = 'Drone_Compensator_U_orient_refin';
      
tmpArgs    = [tmpArgs; Initialize_EI3Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(3+1)];

% Pointer Type: Pointer to Type_0_R0_V0    
PtrType_0_R0_V0_0_0 = embedded.pointertype;
   PtrType_0_R0_V0_0_0.BaseType = Type_0_R0_V0;
    PtrType_0_R0_V0_0_0.ReadOnly = 0;
    PtrType_0_R0_V0_0_0.Volatile = 0;
    
        Initialize_EI4Arg = RTW.Argument;
        Initialize_EI4Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI4Arg.Name = 'Drone_Compensator_U_ddx';
        codeInfo.Inports(4+1).Implementation.Identifier = 'Drone_Compensator_U_ddx';
      
tmpArgs    = [tmpArgs; Initialize_EI4Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(4+1)];
        Initialize_EI5Arg = RTW.Argument;
        Initialize_EI5Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI5Arg.Name = 'Drone_Compensator_U_ddy';
        codeInfo.Inports(5+1).Implementation.Identifier = 'Drone_Compensator_U_ddy';
      
tmpArgs    = [tmpArgs; Initialize_EI5Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(5+1)];
        Initialize_EI6Arg = RTW.Argument;
        Initialize_EI6Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI6Arg.Name = 'Drone_Compensator_U_ddz';
        codeInfo.Inports(6+1).Implementation.Identifier = 'Drone_Compensator_U_ddz';
      
tmpArgs    = [tmpArgs; Initialize_EI6Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(6+1)];
        Initialize_EI7Arg = RTW.Argument;
        Initialize_EI7Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI7Arg.Name = 'Drone_Compensator_U_p';
        codeInfo.Inports(7+1).Implementation.Identifier = 'Drone_Compensator_U_p';
      
tmpArgs    = [tmpArgs; Initialize_EI7Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(7+1)];
        Initialize_EI8Arg = RTW.Argument;
        Initialize_EI8Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI8Arg.Name = 'Drone_Compensator_U_q';
        codeInfo.Inports(8+1).Implementation.Identifier = 'Drone_Compensator_U_q';
      
tmpArgs    = [tmpArgs; Initialize_EI8Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(8+1)];
        Initialize_EI9Arg = RTW.Argument;
        Initialize_EI9Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI9Arg.Name = 'Drone_Compensator_U_r';
        codeInfo.Inports(9+1).Implementation.Identifier = 'Drone_Compensator_U_r';
      
tmpArgs    = [tmpArgs; Initialize_EI9Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(9+1)];
        Initialize_EI10Arg = RTW.Argument;
        Initialize_EI10Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI10Arg.Name = 'Drone_Compensator_U_altitude_sonar';
        codeInfo.Inports(10+1).Implementation.Identifier = 'Drone_Compensator_U_altitude_sonar';
      
tmpArgs    = [tmpArgs; Initialize_EI10Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(10+1)];
        Initialize_EI11Arg = RTW.Argument;
        Initialize_EI11Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI11Arg.Name = 'Drone_Compensator_U_prs';
        codeInfo.Inports(11+1).Implementation.Identifier = 'Drone_Compensator_U_prs';
      
tmpArgs    = [tmpArgs; Initialize_EI11Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(11+1)];
        Initialize_EI12Arg = RTW.Argument;
        Initialize_EI12Arg.Type = Type_34_R0_V0;
        Initialize_EI12Arg.Name = 'Drone_Compensator_U_opticalFlow_datin';
        codeInfo.Inports(12+1).Implementation.Identifier = 'Drone_Compensator_U_opticalFlow_datin';
      
tmpArgs    = [tmpArgs; Initialize_EI12Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(12+1)];
      
  % Matrix Type
  Type_33_R0_V0 = embedded.matrixtype;
  Type_33_R0_V0.BaseType   = Type_0_R0_V0;
    Type_33_R0_V0.Dimensions = [7];
            Initialize_EI13Arg = RTW.Argument;
        Initialize_EI13Arg.Type = Type_33_R0_V0;
        Initialize_EI13Arg.Name = 'Drone_Compensator_U_sensordataCalib_datin';
        codeInfo.Inports(13+1).Implementation.Identifier = 'Drone_Compensator_U_sensordataCalib_datin';
      
tmpArgs    = [tmpArgs; Initialize_EI13Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(13+1)];
      
  % Matrix Type
  Type_30_R0_V0 = embedded.matrixtype;
  Type_30_R0_V0.BaseType   = Type_0_R0_V0;
    Type_30_R0_V0.Dimensions = [4];
            Initialize_EI14Arg = RTW.Argument;
        Initialize_EI14Arg.Type = Type_30_R0_V0;
        Initialize_EI14Arg.Name = 'Drone_Compensator_U_posVIS_datin';
        codeInfo.Inports(14+1).Implementation.Identifier = 'Drone_Compensator_U_posVIS_datin';
      
tmpArgs    = [tmpArgs; Initialize_EI14Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(14+1)];
        Initialize_EI15Arg = RTW.Argument;
        Initialize_EI15Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EI15Arg.Name = 'Drone_Compensator_U_usePosVIS_flagin';
        codeInfo.Inports(15+1).Implementation.Identifier = 'Drone_Compensator_U_usePosVIS_flagin';
      
tmpArgs    = [tmpArgs; Initialize_EI15Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(15+1)];
      
  % Matrix Type
  Type_29_R0_V0 = embedded.matrixtype;
  Type_29_R0_V0.BaseType   = Type_0_R0_V0;
    Type_29_R0_V0.Dimensions = [2];
            Initialize_EI16Arg = RTW.Argument;
        Initialize_EI16Arg.Type = Type_29_R0_V0;
        Initialize_EI16Arg.Name = 'Drone_Compensator_U_batteryStatus_datin';
        codeInfo.Inports(16+1).Implementation.Identifier = 'Drone_Compensator_U_batteryStatus_datin';
      
tmpArgs    = [tmpArgs; Initialize_EI16Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(16+1)];
        Initialize_EO0Arg = RTW.Argument;
        Initialize_EO0Arg.Type = Type_30_R0_V0;
        Initialize_EO0Arg.Name = 'Drone_Compensator_Y_motors_refout';
        Initialize_EO0Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(0+1).Implementation.Identifier = 'Drone_Compensator_Y_motors_refout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO0Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(0+1)];
        Initialize_EO1Arg = RTW.Argument;
        Initialize_EO1Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO1Arg.Name = 'Drone_Compensator_Y_X';
        Initialize_EO1Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(1+1).Implementation.Identifier = 'Drone_Compensator_Y_X'; 
        
tmpArgs    = [tmpArgs; Initialize_EO1Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(1+1)];
        Initialize_EO2Arg = RTW.Argument;
        Initialize_EO2Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO2Arg.Name = 'Drone_Compensator_Y_Y';
        Initialize_EO2Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(2+1).Implementation.Identifier = 'Drone_Compensator_Y_Y'; 
        
tmpArgs    = [tmpArgs; Initialize_EO2Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(2+1)];
        Initialize_EO3Arg = RTW.Argument;
        Initialize_EO3Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO3Arg.Name = 'Drone_Compensator_Y_Z';
        Initialize_EO3Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(3+1).Implementation.Identifier = 'Drone_Compensator_Y_Z'; 
        
tmpArgs    = [tmpArgs; Initialize_EO3Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(3+1)];
        Initialize_EO4Arg = RTW.Argument;
        Initialize_EO4Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO4Arg.Name = 'Drone_Compensator_Y_yaw';
        Initialize_EO4Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(4+1).Implementation.Identifier = 'Drone_Compensator_Y_yaw'; 
        
tmpArgs    = [tmpArgs; Initialize_EO4Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(4+1)];
        Initialize_EO5Arg = RTW.Argument;
        Initialize_EO5Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO5Arg.Name = 'Drone_Compensator_Y_pitch';
        Initialize_EO5Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(5+1).Implementation.Identifier = 'Drone_Compensator_Y_pitch'; 
        
tmpArgs    = [tmpArgs; Initialize_EO5Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(5+1)];
        Initialize_EO6Arg = RTW.Argument;
        Initialize_EO6Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO6Arg.Name = 'Drone_Compensator_Y_roll';
        Initialize_EO6Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(6+1).Implementation.Identifier = 'Drone_Compensator_Y_roll'; 
        
tmpArgs    = [tmpArgs; Initialize_EO6Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(6+1)];
        Initialize_EO7Arg = RTW.Argument;
        Initialize_EO7Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO7Arg.Name = 'Drone_Compensator_Y_dx';
        Initialize_EO7Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(7+1).Implementation.Identifier = 'Drone_Compensator_Y_dx'; 
        
tmpArgs    = [tmpArgs; Initialize_EO7Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(7+1)];
        Initialize_EO8Arg = RTW.Argument;
        Initialize_EO8Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO8Arg.Name = 'Drone_Compensator_Y_dy';
        Initialize_EO8Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(8+1).Implementation.Identifier = 'Drone_Compensator_Y_dy'; 
        
tmpArgs    = [tmpArgs; Initialize_EO8Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(8+1)];
        Initialize_EO9Arg = RTW.Argument;
        Initialize_EO9Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO9Arg.Name = 'Drone_Compensator_Y_dz';
        Initialize_EO9Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(9+1).Implementation.Identifier = 'Drone_Compensator_Y_dz'; 
        
tmpArgs    = [tmpArgs; Initialize_EO9Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(9+1)];
        Initialize_EO10Arg = RTW.Argument;
        Initialize_EO10Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO10Arg.Name = 'Drone_Compensator_Y_pb';
        Initialize_EO10Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(10+1).Implementation.Identifier = 'Drone_Compensator_Y_pb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO10Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(10+1)];
        Initialize_EO11Arg = RTW.Argument;
        Initialize_EO11Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO11Arg.Name = 'Drone_Compensator_Y_qb';
        Initialize_EO11Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(11+1).Implementation.Identifier = 'Drone_Compensator_Y_qb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO11Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(11+1)];
        Initialize_EO12Arg = RTW.Argument;
        Initialize_EO12Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO12Arg.Name = 'Drone_Compensator_Y_rb';
        Initialize_EO12Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(12+1).Implementation.Identifier = 'Drone_Compensator_Y_rb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO12Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(12+1)];
        Initialize_EO13Arg = RTW.Argument;
        Initialize_EO13Arg.Type = PtrType_8_R0_V0_0_0;
        Initialize_EO13Arg.Name = 'Drone_Compensator_Y_controlModePosVSOrient_flagout';
        Initialize_EO13Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(13+1).Implementation.Identifier = 'Drone_Compensator_Y_controlModePosVSOrient_flagout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO13Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(13+1)];
      
  % Matrix Type
  Type_35_R0_V0 = embedded.matrixtype;
  Type_35_R0_V0.BaseType   = Type_0_R0_V0;
    Type_35_R0_V0.Dimensions = [6];
            Initialize_EO14Arg = RTW.Argument;
        Initialize_EO14Arg.Type = Type_35_R0_V0;
        Initialize_EO14Arg.Name = 'Drone_Compensator_Y_pose_refout';
        Initialize_EO14Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(14+1).Implementation.Identifier = 'Drone_Compensator_Y_pose_refout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO14Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(14+1)];
        Initialize_EO15Arg = RTW.Argument;
        Initialize_EO15Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO15Arg.Name = 'Drone_Compensator_Y_ddxb';
        Initialize_EO15Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(15+1).Implementation.Identifier = 'Drone_Compensator_Y_ddxb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO15Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(15+1)];
        Initialize_EO16Arg = RTW.Argument;
        Initialize_EO16Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO16Arg.Name = 'Drone_Compensator_Y_ddyb';
        Initialize_EO16Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(16+1).Implementation.Identifier = 'Drone_Compensator_Y_ddyb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO16Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(16+1)];
        Initialize_EO17Arg = RTW.Argument;
        Initialize_EO17Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO17Arg.Name = 'Drone_Compensator_Y_ddzb';
        Initialize_EO17Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(17+1).Implementation.Identifier = 'Drone_Compensator_Y_ddzb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO17Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(17+1)];
        Initialize_EO18Arg = RTW.Argument;
        Initialize_EO18Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO18Arg.Name = 'Drone_Compensator_Y_pa';
        Initialize_EO18Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(18+1).Implementation.Identifier = 'Drone_Compensator_Y_pa'; 
        
tmpArgs    = [tmpArgs; Initialize_EO18Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(18+1)];
        Initialize_EO19Arg = RTW.Argument;
        Initialize_EO19Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO19Arg.Name = 'Drone_Compensator_Y_qa';
        Initialize_EO19Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(19+1).Implementation.Identifier = 'Drone_Compensator_Y_qa'; 
        
tmpArgs    = [tmpArgs; Initialize_EO19Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(19+1)];
        Initialize_EO20Arg = RTW.Argument;
        Initialize_EO20Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO20Arg.Name = 'Drone_Compensator_Y_ra';
        Initialize_EO20Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(20+1).Implementation.Identifier = 'Drone_Compensator_Y_ra'; 
        
tmpArgs    = [tmpArgs; Initialize_EO20Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(20+1)];
        Initialize_EO21Arg = RTW.Argument;
        Initialize_EO21Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO21Arg.Name = 'Drone_Compensator_Y_altitude_sonarb';
        Initialize_EO21Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(21+1).Implementation.Identifier = 'Drone_Compensator_Y_altitude_sonarb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO21Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(21+1)];
        Initialize_EO22Arg = RTW.Argument;
        Initialize_EO22Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO22Arg.Name = 'Drone_Compensator_Y_prsb';
        Initialize_EO22Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(22+1).Implementation.Identifier = 'Drone_Compensator_Y_prsb'; 
        
tmpArgs    = [tmpArgs; Initialize_EO22Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(22+1)];
        Initialize_EO23Arg = RTW.Argument;
        Initialize_EO23Arg.Type = Type_34_R0_V0;
        Initialize_EO23Arg.Name = 'Drone_Compensator_Y_opticalFlow_datout';
        Initialize_EO23Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(23+1).Implementation.Identifier = 'Drone_Compensator_Y_opticalFlow_datout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO23Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(23+1)];
        Initialize_EO24Arg = RTW.Argument;
        Initialize_EO24Arg.Type = Type_33_R0_V0;
        Initialize_EO24Arg.Name = 'Drone_Compensator_Y_sensordataCalib_datout';
        Initialize_EO24Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(24+1).Implementation.Identifier = 'Drone_Compensator_Y_sensordataCalib_datout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO24Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(24+1)];
        Initialize_EO25Arg = RTW.Argument;
        Initialize_EO25Arg.Type = Type_30_R0_V0;
        Initialize_EO25Arg.Name = 'Drone_Compensator_Y_posVIS_datout';
        Initialize_EO25Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(25+1).Implementation.Identifier = 'Drone_Compensator_Y_posVIS_datout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO25Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(25+1)];
        Initialize_EO26Arg = RTW.Argument;
        Initialize_EO26Arg.Type = PtrType_0_R0_V0_0_0;
        Initialize_EO26Arg.Name = 'Drone_Compensator_Y_usePosVIS_flagout';
        Initialize_EO26Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(26+1).Implementation.Identifier = 'Drone_Compensator_Y_usePosVIS_flagout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO26Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(26+1)];
        Initialize_EO27Arg = RTW.Argument;
        Initialize_EO27Arg.Type = Type_29_R0_V0;
        Initialize_EO27Arg.Name = 'Drone_Compensator_Y_batteryStatus_datout';
        Initialize_EO27Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(27+1).Implementation.Identifier = 'Drone_Compensator_Y_batteryStatus_datout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO27Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(27+1)];
        Initialize_EO28Arg = RTW.Argument;
        Initialize_EO28Arg.Type = PtrType_8_R0_V0_0_0;
        Initialize_EO28Arg.Name = 'Drone_Compensator_Y_takeoff_flagout';
        Initialize_EO28Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(28+1).Implementation.Identifier = 'Drone_Compensator_Y_takeoff_flagout'; 
        
tmpArgs    = [tmpArgs; Initialize_EO28Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(28+1)];
  
  

    

  Initialize_Prototype = RTW.CImplementation;
  Initialize_Prototype.Arguments  = tmpArgs;
  Initialize_Prototype.Return     = tmpRet;
    Initialize_Prototype.HeaderFile = ['Drone_Compensator', '.h'];
  Initialize_Prototype.SourceFile = ['Drone_Compensator', '.c'];

  Initialize_Interface = RTW.FunctionInterface;
  Initialize_Interface.Prototype    = Initialize_Prototype;
  Initialize_Interface.ActualArgs   = tmpActualArgs;
  Initialize_Interface.ActualReturn = tmpActualReturn;

      Initialize_Prototype.Name = 'Drone_Compensator_initialize';
  time_constant = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, -1));
      Initialize_Interface.Timing = time_constant;
      codeInfo.InitializeFunctions =  [codeInfo.InitializeFunctions; Initialize_Interface'];

          tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = [];
tmpActualReturn = [];
  
        
      Ptrtype_RTModel_1_0.ReadOnly = 1;
    
        OutputUpdate_RTArg = RTW.Argument;
        OutputUpdate_RTArg.Type   = Ptrtype_RTModel_1_0;
        OutputUpdate_RTArg.Name   = 'Drone_Compensator_M';
        OutputUpdate_RTArg.IOType = 'RTW_IO_INPUT_OUTPUT';    
        
        tmpArgs    = [tmpArgs; OutputUpdate_RTArg];
        tmpActualArgs = [tmpActualArgs; idata_RTModel];

  
  % Data Interface: Parameter
  idata_Parameter = getInternalDataByName(codeInfo.InternalData, 'Parameter');
    if ~isa(idata_Parameter.Implementation,'RTW.PointerExpression') 
        idata_Parameter.Implementation.Identifier = 'Drone_Compensator_P';
    end
  
  % Type of : idata_Parameter
  if isa(idata_Parameter.Implementation,'RTW.PointerExpression')
  type_idata_Parameter = idata_Parameter.Implementation.TargetRegion.Type;
  else
  type_idata_Parameter = idata_Parameter.Implementation.Type;
  end
      
      if ~isa(idata_Parameter.Implementation,'RTW.PointerExpression') 
                 
          
         idata_Parameter.Implementation = PointerExpr_rt_Parameter;      
      end
     
    
        
   
       
        OutputUpdate_EI0Arg = RTW.Argument;
        OutputUpdate_EI0Arg.Type = Type_8_R0_V0;
        OutputUpdate_EI0Arg.Name = 'Drone_Compensator_U_controlModePosVSOrient_flagin';
        codeInfo.Inports(0+1).Implementation.Identifier = 'Drone_Compensator_U_controlModePosVSOrient_flagin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI0Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(0+1)];
        OutputUpdate_EI1Arg = RTW.Argument;
        OutputUpdate_EI1Arg.Type = Type_34_R0_V0;
        OutputUpdate_EI1Arg.Name = 'Drone_Compensator_U_pos_refin';
        codeInfo.Inports(1+1).Implementation.Identifier = 'Drone_Compensator_U_pos_refin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI1Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(1+1)];
        OutputUpdate_EI2Arg = RTW.Argument;
        OutputUpdate_EI2Arg.Type = Type_8_R0_V0;
        OutputUpdate_EI2Arg.Name = 'Drone_Compensator_U_takeoff_flag';
        codeInfo.Inports(2+1).Implementation.Identifier = 'Drone_Compensator_U_takeoff_flag';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI2Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(2+1)];
        OutputUpdate_EI3Arg = RTW.Argument;
        OutputUpdate_EI3Arg.Type = Type_34_R0_V0;
        OutputUpdate_EI3Arg.Name = 'Drone_Compensator_U_orient_refin';
        codeInfo.Inports(3+1).Implementation.Identifier = 'Drone_Compensator_U_orient_refin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI3Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(3+1)];
        OutputUpdate_EI4Arg = RTW.Argument;
        OutputUpdate_EI4Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI4Arg.Name = 'Drone_Compensator_U_ddx';
        codeInfo.Inports(4+1).Implementation.Identifier = 'Drone_Compensator_U_ddx';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI4Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(4+1)];
        OutputUpdate_EI5Arg = RTW.Argument;
        OutputUpdate_EI5Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI5Arg.Name = 'Drone_Compensator_U_ddy';
        codeInfo.Inports(5+1).Implementation.Identifier = 'Drone_Compensator_U_ddy';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI5Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(5+1)];
        OutputUpdate_EI6Arg = RTW.Argument;
        OutputUpdate_EI6Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI6Arg.Name = 'Drone_Compensator_U_ddz';
        codeInfo.Inports(6+1).Implementation.Identifier = 'Drone_Compensator_U_ddz';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI6Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(6+1)];
        OutputUpdate_EI7Arg = RTW.Argument;
        OutputUpdate_EI7Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI7Arg.Name = 'Drone_Compensator_U_p';
        codeInfo.Inports(7+1).Implementation.Identifier = 'Drone_Compensator_U_p';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI7Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(7+1)];
        OutputUpdate_EI8Arg = RTW.Argument;
        OutputUpdate_EI8Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI8Arg.Name = 'Drone_Compensator_U_q';
        codeInfo.Inports(8+1).Implementation.Identifier = 'Drone_Compensator_U_q';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI8Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(8+1)];
        OutputUpdate_EI9Arg = RTW.Argument;
        OutputUpdate_EI9Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI9Arg.Name = 'Drone_Compensator_U_r';
        codeInfo.Inports(9+1).Implementation.Identifier = 'Drone_Compensator_U_r';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI9Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(9+1)];
        OutputUpdate_EI10Arg = RTW.Argument;
        OutputUpdate_EI10Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI10Arg.Name = 'Drone_Compensator_U_altitude_sonar';
        codeInfo.Inports(10+1).Implementation.Identifier = 'Drone_Compensator_U_altitude_sonar';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI10Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(10+1)];
        OutputUpdate_EI11Arg = RTW.Argument;
        OutputUpdate_EI11Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI11Arg.Name = 'Drone_Compensator_U_prs';
        codeInfo.Inports(11+1).Implementation.Identifier = 'Drone_Compensator_U_prs';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI11Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(11+1)];
        OutputUpdate_EI12Arg = RTW.Argument;
        OutputUpdate_EI12Arg.Type = Type_34_R0_V0;
        OutputUpdate_EI12Arg.Name = 'Drone_Compensator_U_opticalFlow_datin';
        codeInfo.Inports(12+1).Implementation.Identifier = 'Drone_Compensator_U_opticalFlow_datin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI12Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(12+1)];
        OutputUpdate_EI13Arg = RTW.Argument;
        OutputUpdate_EI13Arg.Type = Type_33_R0_V0;
        OutputUpdate_EI13Arg.Name = 'Drone_Compensator_U_sensordataCalib_datin';
        codeInfo.Inports(13+1).Implementation.Identifier = 'Drone_Compensator_U_sensordataCalib_datin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI13Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(13+1)];
        OutputUpdate_EI14Arg = RTW.Argument;
        OutputUpdate_EI14Arg.Type = Type_30_R0_V0;
        OutputUpdate_EI14Arg.Name = 'Drone_Compensator_U_posVIS_datin';
        codeInfo.Inports(14+1).Implementation.Identifier = 'Drone_Compensator_U_posVIS_datin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI14Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(14+1)];
        OutputUpdate_EI15Arg = RTW.Argument;
        OutputUpdate_EI15Arg.Type = Type_0_R0_V0;
        OutputUpdate_EI15Arg.Name = 'Drone_Compensator_U_usePosVIS_flagin';
        codeInfo.Inports(15+1).Implementation.Identifier = 'Drone_Compensator_U_usePosVIS_flagin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI15Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(15+1)];
        OutputUpdate_EI16Arg = RTW.Argument;
        OutputUpdate_EI16Arg.Type = Type_29_R0_V0;
        OutputUpdate_EI16Arg.Name = 'Drone_Compensator_U_batteryStatus_datin';
        codeInfo.Inports(16+1).Implementation.Identifier = 'Drone_Compensator_U_batteryStatus_datin';
      
tmpArgs    = [tmpArgs; OutputUpdate_EI16Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Inports(16+1)];
        OutputUpdate_EO0Arg = RTW.Argument;
        OutputUpdate_EO0Arg.Type = Type_30_R0_V0;
        OutputUpdate_EO0Arg.Name = 'Drone_Compensator_Y_motors_refout';
        OutputUpdate_EO0Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(0+1).Implementation.Identifier = 'Drone_Compensator_Y_motors_refout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO0Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(0+1)];
        OutputUpdate_EO1Arg = RTW.Argument;
        OutputUpdate_EO1Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO1Arg.Name = 'Drone_Compensator_Y_X';
        OutputUpdate_EO1Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(1+1).Implementation.Identifier = 'Drone_Compensator_Y_X'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO1Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(1+1)];
        OutputUpdate_EO2Arg = RTW.Argument;
        OutputUpdate_EO2Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO2Arg.Name = 'Drone_Compensator_Y_Y';
        OutputUpdate_EO2Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(2+1).Implementation.Identifier = 'Drone_Compensator_Y_Y'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO2Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(2+1)];
        OutputUpdate_EO3Arg = RTW.Argument;
        OutputUpdate_EO3Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO3Arg.Name = 'Drone_Compensator_Y_Z';
        OutputUpdate_EO3Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(3+1).Implementation.Identifier = 'Drone_Compensator_Y_Z'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO3Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(3+1)];
        OutputUpdate_EO4Arg = RTW.Argument;
        OutputUpdate_EO4Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO4Arg.Name = 'Drone_Compensator_Y_yaw';
        OutputUpdate_EO4Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(4+1).Implementation.Identifier = 'Drone_Compensator_Y_yaw'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO4Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(4+1)];
        OutputUpdate_EO5Arg = RTW.Argument;
        OutputUpdate_EO5Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO5Arg.Name = 'Drone_Compensator_Y_pitch';
        OutputUpdate_EO5Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(5+1).Implementation.Identifier = 'Drone_Compensator_Y_pitch'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO5Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(5+1)];
        OutputUpdate_EO6Arg = RTW.Argument;
        OutputUpdate_EO6Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO6Arg.Name = 'Drone_Compensator_Y_roll';
        OutputUpdate_EO6Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(6+1).Implementation.Identifier = 'Drone_Compensator_Y_roll'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO6Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(6+1)];
        OutputUpdate_EO7Arg = RTW.Argument;
        OutputUpdate_EO7Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO7Arg.Name = 'Drone_Compensator_Y_dx';
        OutputUpdate_EO7Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(7+1).Implementation.Identifier = 'Drone_Compensator_Y_dx'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO7Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(7+1)];
        OutputUpdate_EO8Arg = RTW.Argument;
        OutputUpdate_EO8Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO8Arg.Name = 'Drone_Compensator_Y_dy';
        OutputUpdate_EO8Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(8+1).Implementation.Identifier = 'Drone_Compensator_Y_dy'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO8Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(8+1)];
        OutputUpdate_EO9Arg = RTW.Argument;
        OutputUpdate_EO9Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO9Arg.Name = 'Drone_Compensator_Y_dz';
        OutputUpdate_EO9Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(9+1).Implementation.Identifier = 'Drone_Compensator_Y_dz'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO9Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(9+1)];
        OutputUpdate_EO10Arg = RTW.Argument;
        OutputUpdate_EO10Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO10Arg.Name = 'Drone_Compensator_Y_pb';
        OutputUpdate_EO10Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(10+1).Implementation.Identifier = 'Drone_Compensator_Y_pb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO10Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(10+1)];
        OutputUpdate_EO11Arg = RTW.Argument;
        OutputUpdate_EO11Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO11Arg.Name = 'Drone_Compensator_Y_qb';
        OutputUpdate_EO11Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(11+1).Implementation.Identifier = 'Drone_Compensator_Y_qb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO11Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(11+1)];
        OutputUpdate_EO12Arg = RTW.Argument;
        OutputUpdate_EO12Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO12Arg.Name = 'Drone_Compensator_Y_rb';
        OutputUpdate_EO12Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(12+1).Implementation.Identifier = 'Drone_Compensator_Y_rb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO12Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(12+1)];
        OutputUpdate_EO13Arg = RTW.Argument;
        OutputUpdate_EO13Arg.Type = PtrType_8_R0_V0_0_0;
        OutputUpdate_EO13Arg.Name = 'Drone_Compensator_Y_controlModePosVSOrient_flagout';
        OutputUpdate_EO13Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(13+1).Implementation.Identifier = 'Drone_Compensator_Y_controlModePosVSOrient_flagout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO13Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(13+1)];
        OutputUpdate_EO14Arg = RTW.Argument;
        OutputUpdate_EO14Arg.Type = Type_35_R0_V0;
        OutputUpdate_EO14Arg.Name = 'Drone_Compensator_Y_pose_refout';
        OutputUpdate_EO14Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(14+1).Implementation.Identifier = 'Drone_Compensator_Y_pose_refout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO14Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(14+1)];
        OutputUpdate_EO15Arg = RTW.Argument;
        OutputUpdate_EO15Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO15Arg.Name = 'Drone_Compensator_Y_ddxb';
        OutputUpdate_EO15Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(15+1).Implementation.Identifier = 'Drone_Compensator_Y_ddxb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO15Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(15+1)];
        OutputUpdate_EO16Arg = RTW.Argument;
        OutputUpdate_EO16Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO16Arg.Name = 'Drone_Compensator_Y_ddyb';
        OutputUpdate_EO16Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(16+1).Implementation.Identifier = 'Drone_Compensator_Y_ddyb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO16Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(16+1)];
        OutputUpdate_EO17Arg = RTW.Argument;
        OutputUpdate_EO17Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO17Arg.Name = 'Drone_Compensator_Y_ddzb';
        OutputUpdate_EO17Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(17+1).Implementation.Identifier = 'Drone_Compensator_Y_ddzb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO17Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(17+1)];
        OutputUpdate_EO18Arg = RTW.Argument;
        OutputUpdate_EO18Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO18Arg.Name = 'Drone_Compensator_Y_pa';
        OutputUpdate_EO18Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(18+1).Implementation.Identifier = 'Drone_Compensator_Y_pa'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO18Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(18+1)];
        OutputUpdate_EO19Arg = RTW.Argument;
        OutputUpdate_EO19Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO19Arg.Name = 'Drone_Compensator_Y_qa';
        OutputUpdate_EO19Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(19+1).Implementation.Identifier = 'Drone_Compensator_Y_qa'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO19Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(19+1)];
        OutputUpdate_EO20Arg = RTW.Argument;
        OutputUpdate_EO20Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO20Arg.Name = 'Drone_Compensator_Y_ra';
        OutputUpdate_EO20Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(20+1).Implementation.Identifier = 'Drone_Compensator_Y_ra'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO20Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(20+1)];
        OutputUpdate_EO21Arg = RTW.Argument;
        OutputUpdate_EO21Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO21Arg.Name = 'Drone_Compensator_Y_altitude_sonarb';
        OutputUpdate_EO21Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(21+1).Implementation.Identifier = 'Drone_Compensator_Y_altitude_sonarb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO21Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(21+1)];
        OutputUpdate_EO22Arg = RTW.Argument;
        OutputUpdate_EO22Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO22Arg.Name = 'Drone_Compensator_Y_prsb';
        OutputUpdate_EO22Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(22+1).Implementation.Identifier = 'Drone_Compensator_Y_prsb'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO22Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(22+1)];
        OutputUpdate_EO23Arg = RTW.Argument;
        OutputUpdate_EO23Arg.Type = Type_34_R0_V0;
        OutputUpdate_EO23Arg.Name = 'Drone_Compensator_Y_opticalFlow_datout';
        OutputUpdate_EO23Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(23+1).Implementation.Identifier = 'Drone_Compensator_Y_opticalFlow_datout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO23Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(23+1)];
        OutputUpdate_EO24Arg = RTW.Argument;
        OutputUpdate_EO24Arg.Type = Type_33_R0_V0;
        OutputUpdate_EO24Arg.Name = 'Drone_Compensator_Y_sensordataCalib_datout';
        OutputUpdate_EO24Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(24+1).Implementation.Identifier = 'Drone_Compensator_Y_sensordataCalib_datout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO24Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(24+1)];
        OutputUpdate_EO25Arg = RTW.Argument;
        OutputUpdate_EO25Arg.Type = Type_30_R0_V0;
        OutputUpdate_EO25Arg.Name = 'Drone_Compensator_Y_posVIS_datout';
        OutputUpdate_EO25Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(25+1).Implementation.Identifier = 'Drone_Compensator_Y_posVIS_datout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO25Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(25+1)];
        OutputUpdate_EO26Arg = RTW.Argument;
        OutputUpdate_EO26Arg.Type = PtrType_0_R0_V0_0_0;
        OutputUpdate_EO26Arg.Name = 'Drone_Compensator_Y_usePosVIS_flagout';
        OutputUpdate_EO26Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(26+1).Implementation.Identifier = 'Drone_Compensator_Y_usePosVIS_flagout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO26Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(26+1)];
        OutputUpdate_EO27Arg = RTW.Argument;
        OutputUpdate_EO27Arg.Type = Type_29_R0_V0;
        OutputUpdate_EO27Arg.Name = 'Drone_Compensator_Y_batteryStatus_datout';
        OutputUpdate_EO27Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(27+1).Implementation.Identifier = 'Drone_Compensator_Y_batteryStatus_datout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO27Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(27+1)];
        OutputUpdate_EO28Arg = RTW.Argument;
        OutputUpdate_EO28Arg.Type = PtrType_8_R0_V0_0_0;
        OutputUpdate_EO28Arg.Name = 'Drone_Compensator_Y_takeoff_flagout';
        OutputUpdate_EO28Arg.IOType = 'RTW_IO_OUTPUT';
        codeInfo.Outports(28+1).Implementation.Identifier = 'Drone_Compensator_Y_takeoff_flagout'; 
        
tmpArgs    = [tmpArgs; OutputUpdate_EO28Arg];
tmpActualArgs = [tmpActualArgs; codeInfo.Outports(28+1)];
  
  

    

  OutputUpdate_Prototype = RTW.CImplementation;
  OutputUpdate_Prototype.Arguments  = tmpArgs;
  OutputUpdate_Prototype.Return     = tmpRet;
    OutputUpdate_Prototype.HeaderFile = ['Drone_Compensator', '.h'];
  OutputUpdate_Prototype.SourceFile = ['Drone_Compensator', '.c'];

  OutputUpdate_Interface = RTW.FunctionInterface;
  OutputUpdate_Interface.Prototype    = OutputUpdate_Prototype;
  OutputUpdate_Interface.ActualArgs   = tmpActualArgs;
  OutputUpdate_Interface.ActualReturn = tmpActualReturn;

      OutputUpdate_Prototype.Name = 'Drone_Compensator_step';
  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
      OutputUpdate_Interface.Timing = time_0;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions; OutputUpdate_Interface'];


  


if ~isempty(skippedParameters)
codeInfo.Parameters(skippedParameters) = [];
end

codeInfo.InternalData = [codeInfo.InternalData; idata_RTModel];
codeInfo.InternalData(end+1) = idata_rt_BlockIO;
codeInfo.InternalData(end+1) = idata_rt_DWork;

% Handling Right-Click Builds
ss = rtwprivate('getSourceSubsystemHandle',codeInfo.GraphicalPath);
% Check if Rt-Click build, then re-map SIDs
if ~isempty(ss) && rtwprivate('rtwattic','hasSIDMap')
   codeInfo = modifyCodeInfoForSubsystemBuild(ss, codeInfo);
end

  lookupTableArray = [];         
  if exist('expInports', 'var')
    save codeInfo.mat codeInfo expInports lookupTableArray;
  else
    save codeInfo.mat codeInfo lookupTableArray;
  end
returnVal = 1;

% End Function: writeCodeInfoFcn

function idx = getIndexFromTimingInternalId(internalIdVec, internalId)
 idx = find(internalIdVec == internalId);
 if (isempty(idx) || (length(idx) > 1))
    ciMsg = 'Time object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getIndexFromTimingInternalId

function checkDataGraphicalNames(ciName, rtwName)
  if (strcmp(ciName, rtwName) ~= 1)
    ciMsg = ['Name mismatch: ', ciName, ' and ', rtwName]; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: checkDataGraphicalNames

function iData = getInternalDataByName(iDataVec, iDataName)
 iData = find(iDataVec, 'GraphicalName', iDataName);
 if (isempty(iData) || (length(iData) > 1))
    ciMsg = 'Internal Data object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getInternalDataByName

function iData = getInternalDataByVariableName(iDataVec, iDataVariableName)
 iData = [];
 for idxData = 1:numel(iDataVec)
    if strcmp(iDataVariableName, iDataVec(idxData).Implementation.VariableName)
       iData = iDataVec(idxData);
       break
    end
 end
 if isempty(iData)
    ciMsg = 'Internal Data object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getInternalDataByVariableName

function codeInfo = modifyCodeInfoForSubsystemBuild(ss, codeInfo)
    
% Extract Subsystem Build Map from AtticData
    Subsystem_Build_Mapping = rtwprivate('rtwattic','getSIDMap');

% Parameters
    for i = 1:length(codeInfo.Parameters)
        sid = codeInfo.Parameters(i).SID;        

        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Parameters(i).SID = sid;        
    end
    
% Data Stores
     for i = 1:length(codeInfo.DataStores)
         sid = codeInfo.DataStores(i).SID;         

         sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
         codeInfo.DataStores(i).SID = sid;
     end
    
% Inports
    for i = 1:length(codeInfo.Inports)
        sid = codeInfo.Inports(i).SID;
        
        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Inports(i).SID = sid;
    end
    
% Outports
    for i = 1:length(codeInfo.Outports)
        sid = codeInfo.Outports(i).SID;
 
        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Outports(i).SID = sid;
    end    
   
